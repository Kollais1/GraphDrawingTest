<Window x:Class="TestTask.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestTask"
        xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF" 
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="650" Width="800">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="80"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <Button Content="СТАРТ" Margin="0,0,10,0" Padding="5" Command="{Binding Path=StartDrawingCommand}"/>
            <Button Content="СТОП" Margin="0,0,10,0" Padding="5" Command="{Binding Path=StopDrawingCommand}"/>
            <!--<Slider x:Name="zoom" MinWidth="200" Margin="0,0,10,0" 
                    Value="0" Minimum="0" Maximum="100" IsSnapToTickEnabled="True"
                    TickPlacement="BottomRight" TickFrequency="25">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged" SourceObject="{Binding ElementName=zoom}">
                        <b:InvokeCommandAction Command="{Binding Path=ZoomChangedCommand}" PassEventArgsToCommand="True"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </Slider>
            <Label Content="Zoom"/>-->
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="0,30,0,0">
            <Border Width="20" Margin="5,0,5,50">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Offset="0"  Color="#ff0000"/>
                        <GradientStop Offset="0.25"  Color="#ffff00"/>
                        <GradientStop Offset="0.5" Color="#00ff00" />
                        <GradientStop Offset="0.75"  Color="#00ffff"/>
                        <GradientStop Offset="1"  Color="#0000ff" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="-20dBm" />
                <TextBlock Grid.Row="1" Text="-40dBm" />
                <TextBlock Grid.Row="2" Text="-60dBm" />
                <TextBlock Grid.Row="3" Text="-80dBm" />
                <TextBlock Grid.Row="4" Text="-100dBm"/>
                <TextBlock Grid.Row="5" Text="-120dBm"/>
            </Grid>
        </StackPanel>

        <Image Grid.Row="1" Source="{Binding Path=YAxisValueLabels}"/>
        <!-- spectrogram-->
        <Image Grid.Row="1" Grid.Column="1" Source="{Binding Path=Spectrum}"/>

        <StackPanel Grid.Row="2" Grid.Column="1">
            <Image Source="{Binding Path=XAxisValueLabels}" MinHeight="30"/>
            <!-- waterfall -->
            <Image Source="{Binding Path=Waterfall}" VerticalAlignment="Top"/>
        </StackPanel>

    </Grid>
</Window>
